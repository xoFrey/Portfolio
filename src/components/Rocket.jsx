/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/3D/Rocket.glb 
*/

import React, { useRef } from "react";
import { useGLTF, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function Rocket(props) {
  const { nodes, materials } = useGLTF("/3D/Rocket.glb");
  const rocketRef = useRef();
  const scroll = useScroll();

  useFrame(() => {
    const scrollY = scroll.offset;
    rocketRef.current.position.x = 2 * Math.sin(scrollY * 2 * Math.PI);
    rocketRef.current.position.z = 2 * Math.cos(scrollY * 2 * Math.PI);
    rocketRef.current.position.y = Math.cos(scrollY * 2 * Math.PI);

    rocketRef.current.rotation.z = -2 + scrollY * 0.2;
    rocketRef.current.rotation.y = 6 * scrollY;
  });

  return (
    <group
      ref={rocketRef}
      position={[-1, 0, 2]}
      scale={0.5}
      {...props}
      dispose={null}>
      <ambientLight intensity={2} />
      <mesh
        geometry={nodes.mesh_0.geometry}
        material={nodes.mesh_0.material}
      />
    </group>
  );
}

useGLTF.preload("/3D/Rocket.glb");
